# lots of ideas from here: https://github.com/dflook/terraform-github-actions
---
name: "reusable-docker-build"

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      deployment_tag:
        required: true
        type: string
      repository_name:
        required: true
        type: string
    secrets:
      aws_account:
        required: true
      aws_assume_role:
        required: true
      gh_token:
        required: false
      npm_token:
        required: false
      gh_user:
        required: false
      maven_github_token:
        required: false

env:
  # cluster vars
  AWS_REGION: ${{ inputs.aws_region }}
  NPM_TOKEN: ${{ secrets.npm_token }}

permissions:
  id-token: write
  contents: read

jobs:
  reusable-docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws_account }}:role/${{ secrets.aws_assume_role }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./

      - name: Set up codeartifact
        run: |
          CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain bb-maven-repo --domain-owner 972594475906 --query authorizationToken --region us-east-2 --output text)
          echo "CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN" >> $GITHUB_ENV

      - name: Add Github Registry Auth Token
        if: ${{ env.NPM_TOKEN != '' }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ env.NPM_TOKEN }}" > ./.npmrc
          echo "@coinsquarex:registry=https://npm.pkg.github.com" >> ./.npmrc
          echo "registry=https://registry.npmjs.org" >> ./.npmrc
          # HACK: Needed so that yarn install doesn't fail for internal NPM packages
          echo 'registry "https://npm.pkg.github.com"' > .yarnrc

      - name: Set up QEMU for multi Architecture Build
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.1.0
        with:
          version: latest
          driver-opts: |
            network=host
            image=moby/buildkit:v0.13.0

      - name: Login to Amazon ECR
        id: login-ecr
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.aws_account }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Set tag for branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ecr_tag=stable" >> "$GITHUB_ENV"
          else
            echo "ecr_tag=latest" >> "$GITHUB_ENV"
          fi

      - name: Docker Build & Push ECR
        id: docker_builds
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.aws_account }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ inputs.repository_name }}:${{ inputs.deployment_tag }}
            ${{ secrets.aws_account }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ inputs.repository_name }}:${{env.ecr_tag}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
             GITHUB_ACCESS_TOKEN=${{ secrets.gh_token || '' }}
             GITHUB_USER=${{ secrets.gh_user || '' }}
             MAVEN_GITHUB_TOKEN=${{ secrets.maven_github_token || '' }}
             CODEARTIFACT_AUTH_TOKEN=${{ env.CODEARTIFACT_AUTH_TOKEN }}
