# lots of ideas from here: https://github.com/dflook/terraform-github-actions
# https://dev.to/tomassirio/make-changes-on-repository-a-while-modifying-repository-b-github-actions-is-here-50g8
---
name: "reusable-deploy"

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      deployment_branch:
        required: true
        type: string
      deployment_repo:
        required: true
        type: string
      deployment_folder:
        required: true
        type: string
      deployment_tag:
        required: true
        type: string
      repository_name:
        required: true
        type: string
      pipeline_env:
        required: true
        type: string
      pipeline_tenant:
        required: true
        type: string
      pipeline_zone:
        required: true
        type: string
      pipeline_environment:
        required: true
        type: string
    secrets:
      ssh-key:
        required: true

env:
  # cluster vars
  AWS_REGION: ${{ inputs.aws_region }}
  # TODO THIS WILL NEED A SCRIPT TO CHANGE... some how ...
  IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}

jobs:
  reusable-deploy:
    runs-on: ubuntu-latest
    environment: "${{ inputs.pipeline_environment }}"

    steps:
      # checkout the microservice ... ie ci-demo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./

      # checkout the pipeline (this repo)
      - name: Check out pipeline repo
        uses: actions/checkout@v4
        with:
          repository: bitbuy-infrastructure/bb-cicd
          ref: main
          path: ./pipeline

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - run: pip install -r ./pipeline/requirements.txt

      # checkout the argocd repo
      - name: Checkout ${{ inputs.deployment_repo }}
        id: git_checkout
        uses: actions/checkout@v4
        with:
          repository: bitbuy-infrastructure/${{ inputs.deployment_repo }}
          ssh-key: ${{ secrets.ssh-key }}
          path: ./${{ inputs.deployment_repo }}
          ref: ${{ inputs.deployment_branch }}

# TODO make this a script
      - name: Update Tag and Push to ArgoCD
        id: deployment
        env:
          ARGOCD_FOLDER: ${{ inputs.deployment_repo }}
          DEPLOYMENT_FOLDER: ${{ inputs.deployment_folder }}
          DEPLOYMENT_TAG: ${{ inputs.deployment_tag }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
          PIPELINE_ENV: ${{ inputs.pipeline_env }}
          PIPELINE_TENANT: ${{ inputs.pipeline_tenant }}
          PIPELINE_ZONE: ${{ inputs.pipeline_zone }}
        run: |
          python ${{ github.workspace }}/pipeline/src/pipeline.py
          cat ${{ github.workspace }}/${{ inputs.deployment_repo }}/${{ inputs.deployment_folder }}/${{ inputs.pipeline_tenant }}/${{ inputs.pipeline_env }}/${{ inputs.pipeline_zone }}/values.yaml

      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.ssh-key }}

      - name: Commit files
        run: |
          cd ./${{ inputs.deployment_repo }}
          git add .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff-index --quiet HEAD || git commit -am "update deployment for ${{ inputs.pipeline_tenant }} ${{ inputs.pipeline_env }} ${{ inputs.pipeline_zone }} ${{ github.repository }} ${{ inputs.deployment_tag }}"
          git push --force
        if: github.event_name != 'pull_request'
